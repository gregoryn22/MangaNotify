name: Build and Push Docker Image

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*.*.*' ]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        env:
          AUTH_ENABLED: "true"
          AUTH_SECRET_KEY: "test-secret-key-12345678901234567890"
          AUTH_USERNAME: "admin"
          AUTH_PASSWORD: "password123"
          DATA_DIR: "/tmp/test_data"
          POLL_INTERVAL_SEC: "0"
          PUSHOVER_APP_TOKEN: "test_token"
          PUSHOVER_USER_KEY: "test_user"
        run: |
          python -m pytest tests/ -v

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY || 'ghcr.io' }}
          username: ${{ secrets.REGISTRY_USERNAME || github.actor }}
          password: ${{ secrets.REGISTRY_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.IMAGE_NAME || format('ghcr.io/{0}/manganotify', github.repository_owner) }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


